{{- if eq (include "ros-ocp.jwt.shouldEnable" .) "true" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ros-ocp.fullname" . }}-envoy-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ros-ocp.labels" . | nindent 4 }}
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: {{ .Values.jwt_auth.envoy.port }}
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ros_ingress_jwt_http
              access_log:
              - name: envoy.access_loggers.stdout
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              http_filters:
              # External authorization filter that calls Authorino service
              - name: envoy.filters.http.ext_authz
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  transport_api_version: V3
                  grpc_service:
                    envoy_grpc:
                      cluster_name: authorino-service
                    timeout: 5s
                  failure_mode_allow: false
                  with_request_body:
                    max_request_bytes: 104857600
                  clear_route_cache: true
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: local_route
                virtual_hosts:
                - name: ros_ingress_backend
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: ros-ingress-backend

      clusters:
      # Existing Authorino service for external authorization
      - name: authorino-service
        connect_timeout: 5s
        type: LOGICAL_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}  # Enable HTTP/2 for gRPC
        load_assignment:
          cluster_name: authorino-service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    # Use dynamic Authorino service (same namespace or external)
                    address: ros-authorino-custom-authorization.ros-ocp.svc.cluster.local
                    port_value: {{ include "ros-ocp.authorino.port" . }}

      # ROS ingress backend (same pod, different port)
      - name: ros-ingress-backend
        connect_timeout: 5s
        type: LOGICAL_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: ros-ingress-backend
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: localhost  # Same pod
                    port_value: 8081  # Use different port to avoid conflict with Envoy

    # Admin interface for monitoring and debugging
    admin:
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: {{ .Values.jwt_auth.envoy.adminPort }}
{{- end }}
