{{- if eq (include "ros-ocp.isOpenShift" .) "false" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ros-ocp.fullname" . }}-storage-credentials
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ros-ocp.labels" . | nindent 4 }}
type: Opaque
data:
  access-key: {{ .Values.minio.rootUser | b64enc }}
  secret-key: {{ .Values.minio.rootPassword | b64enc }}
{{- else }}
{{- $odfSecret := lookup "v1" "Secret" .Release.Namespace .Values.odf.credentials.secretName -}}
{{- if $odfSecret -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ros-ocp.fullname" . }}-storage-credentials
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ros-ocp.labels" . | nindent 4 }}
type: Opaque
data:
  # Reference existing ODF credentials secret in the same namespace
  # User must create this secret with their ODF S3 credentials
  access-key: {{ index $odfSecret.data (default "access-key" .Values.odf.credentials.accessKeyKey) }}
  secret-key: {{ index $odfSecret.data (default "secret-key" .Values.odf.credentials.secretKeyKey) }}
{{- else }}
{{- fail (printf "ODF credentials secret '%s' not found in namespace '%s'. Please create this secret with your ODF S3 credentials. Example: kubectl create secret generic %s --from-literal=access-key=<access-key> --from-literal=secret-key=<secret-key>" .Values.odf.credentials.secretName .Release.Namespace .Values.odf.credentials.secretName) -}}
{{- end }}
{{- end }}