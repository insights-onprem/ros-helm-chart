{{- if eq (include "ros-ocp.jwt.shouldEnable" .) "true" }}
---
# NetworkPolicy to secure metrics endpoints for ros-ocp-backend components
# Allows access only from OpenShift monitoring namespace (Prometheus)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "ros-ocp.fullname" . }}-api-metrics
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ros-ocp.labels" . | nindent 4 }}
    app.kubernetes.io/component: networkpolicy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: api
  policyTypes:
    - Ingress
  ingress:
    # Allow Prometheus from openshift-monitoring namespace to scrape metrics
    - from:
        - namespaceSelector:
            matchLabels:
              name: openshift-monitoring
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: openshift-monitoring
        - namespaceSelector:
            matchLabels:
              network.openshift.io/policy-group: monitoring
      ports:
        - protocol: TCP
          port: 9000  # Metrics port

---
# NetworkPolicy for processor metrics
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "ros-ocp.fullname" . }}-processor-metrics
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ros-ocp.labels" . | nindent 4 }}
    app.kubernetes.io/component: networkpolicy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: processor
  policyTypes:
    - Ingress
  ingress:
    # Allow Prometheus from openshift-monitoring namespace to scrape metrics
    - from:
        - namespaceSelector:
            matchLabels:
              name: openshift-monitoring
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: openshift-monitoring
        - namespaceSelector:
            matchLabels:
              network.openshift.io/policy-group: monitoring
      ports:
        - protocol: TCP
          port: 9000  # Metrics port

---
# NetworkPolicy for recommendation-poller metrics
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "ros-ocp.fullname" . }}-poller-metrics
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ros-ocp.labels" . | nindent 4 }}
    app.kubernetes.io/component: networkpolicy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: poller
  policyTypes:
    - Ingress
  ingress:
    # Allow Prometheus from openshift-monitoring namespace to scrape metrics
    - from:
        - namespaceSelector:
            matchLabels:
              name: openshift-monitoring
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: openshift-monitoring
        - namespaceSelector:
            matchLabels:
              network.openshift.io/policy-group: monitoring
      ports:
        - protocol: TCP
          port: 9000  # Metrics port

---
# NetworkPolicy to allow REST API traffic via Envoy sidecar (from ingress/router)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "ros-ocp.fullname" . }}-api-access
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ros-ocp.labels" . | nindent 4 }}
    app.kubernetes.io/component: networkpolicy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: api
  policyTypes:
    - Ingress
  ingress:
    # Allow traffic from OpenShift router/ingress to Envoy sidecar
    - from:
        - namespaceSelector:
            matchLabels:
              network.openshift.io/policy-group: ingress
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: openshift-ingress
      ports:
        - protocol: TCP
          port: 9080  # Envoy sidecar port (jwt_auth.envoy.port)
{{- end }}
