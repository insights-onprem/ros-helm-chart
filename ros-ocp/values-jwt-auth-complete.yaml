# Complete JWT Authentication Configuration
# =========================================
# This values file enables full JWT authentication using Keycloak and Authorino
# for the ROS ingress service in OpenShift environments.
#
# Prerequisites:
# 1. Red Hat SSO/Keycloak installed in the cluster
# 2. Authorino Operator installed (see docs/authorino-operator-prerequisites.md)
# 3. Custom ingress image built (run scripts/build-custom-ingress.sh)

# Enable JWT authentication
jwt_auth:
  enabled: true

  # Envoy proxy configuration (using community image for broader compatibility)
  envoy:
    image:
      repository: envoyproxy/envoy
      tag: "v1.24-latest"
    port: 8080
    adminPort: 9901
    logLevel: info

    # External authorization configuration
    extAuth:
      maxRequestBytes: 104857600  # 100MB to match ingress upload size

  # Authorino configuration (using custom deployment for full control)
  authorino:
    deploy:
      enabled: true
      name: ros-authorino
      logLevel: info

      # TLS configuration
      tls:
        enabled: false  # Disable TLS for simplicity in development

    # AuthConfig configuration
    authConfig:
      name: ros-ingress-keycloak-auth
      create: false  # Use custom AuthConfig instead of template

  # Keycloak configuration
  keycloak:
    issuer:
      baseUrl: ""     # Auto-detect Keycloak URL from cluster
      realm: kubernetes

    # Client configuration (should match KeycloakClient CR)
    client:
      id: cost-management-operator

    # Audiences for JWT validation
    audiences:
      - cost-management-operator
      - openshift-oidc

    # TLS configuration for Keycloak communication
    tls:
      # IMPORTANT: Set to true for production with proper CA certificates
      # Set to false only for development/testing with self-signed certs
      insecureSkipVerify: false

      # Path to CA certificate file (when using proper CA)
      # caCert: "/path/to/ca-certificate.pem"

# Platform configuration (required for external route protection)
global:
  platform:
    openshift: true
    domain: "apps.cluster.local"  # Update with your actual cluster domain

# Ingress configuration
ingress:
  # Custom image configuration is handled automatically
  # The deployment will use customAuthDisabled image when jwt_auth.enabled=true

  # Upload configuration - auth is automatically disabled when JWT auth is enabled
  upload:
    requireAuth: true  # Automatically set to false when jwt_auth.enabled=true

  # Storage configuration - must be provided for template validation
  storage:
    bucket: "ros-data"  # Configure according to your storage backend
    pathPrefix: "ros"
    urlExpiration: 172800  # 48 hours

# Additional notes:
# ================
# 1. This configuration uses a "bypass mode" AuthConfig that allows all requests
#    through while maintaining the JWT authentication infrastructure
#
# 2. For production use, implement proper JWT validation by:
#    - Fixing TLS communication between Authorino and Keycloak
#    - Creating proper AuthConfig with JWT validation
#    - Setting keycloak.tls.insecureSkipVerify: false
#
# 3. The custom ingress image disables KubernetesAuthMiddleware when AUTH_ENABLED=false
#    allowing Authorino to handle authentication instead
#
# 4. All environment variables are automatically configured based on jwt_auth.enabled