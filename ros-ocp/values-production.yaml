# Production values for ROS Helm Chart with JWT Authentication
# This configuration uses Red Hat enterprise images and production-ready settings

# Enable JWT authentication with Red Hat enterprise images
jwt_auth:
  enabled: true

  # Envoy proxy configuration - Red Hat enterprise image
  envoy:
    image:
      repository: registry.redhat.io/openshift-service-mesh/proxyv2-rhel9
      tag: "2.4.3"  # Use specific version tags in production
      pullPolicy: Always  # Always pull for security updates

    # Production resource configuration
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

    # External authorization configuration
    externalAuth:
      timeout: 3s  # Shorter timeout for production
      failureMode: false  # Fail closed (secure)
      maxRequestBytes: 4096  # Reduced for security

  # Keycloak configuration (auto-detection enabled)
  keycloak:
    issuer:
      baseUrl: ""  # Auto-detect Keycloak URL
      realm: kubernetes
    audiences:
      - cost-management-operator
      - openshift-oidc

  # Authorino deployment (same namespace - recommended)
  authorino:
    # Install Authorino operator (required for production)
    operator:
      install: true
      installPlanApproval: Manual  # Manual approval for production
      
    deploy:
      enabled: true
      name: ros-authorino

      # Red Hat Authorino image for production
      image:
        repository: registry.redhat.io/rhosak/authorino-rhel8
        tag: "1.0.0"  # Use specific version in production
        pullPolicy: Always  # Always pull for security updates

      logLevel: warn  # Reduced logging for production
      tls:
        enabled: true  # Enable TLS in production

    authConfig:
      name: ros-ingress-keycloak-auth
      create: true

# ROS Ingress production configuration
ingress:
  # Production resource limits
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

  # Production replica count
  replicaCount: 2

  # Health check configuration
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Security context for production
securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001
  seccompProfile:
    type: RuntimeDefault

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

# Network policies (if supported)
networkPolicy:
  enabled: true

# Pod disruption budget for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 1
