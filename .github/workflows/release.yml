name: Create Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v0.1.0, v1.2.3, etc.

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Update Chart.yaml version
        run: |
          sed -i "s/^version:.*/version: ${{ steps.version.outputs.version }}/" ros-ocp/Chart.yaml

      - name: Package Helm chart
        run: |
          helm package ros-ocp

      - name: Create latest symlink
        run: |
          # Create a copy with 'latest' in the name for convenience
          cp ros-ocp-${{ steps.version.outputs.version }}.tgz ros-ocp-latest.tgz

      - name: Generate changelog
        id: changelog
        run: |
          # Simple changelog generation - you can enhance this
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes in ${{ steps.version.outputs.tag }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Helm Chart Updates" >> $GITHUB_OUTPUT
          echo "- Chart version: ${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
          echo "- Package: ros-ocp-${{ steps.version.outputs.version }}.tgz" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Installation" >> $GITHUB_OUTPUT
          echo "\`\`\`bash" >> $GITHUB_OUTPUT
          echo "# Download and install" >> $GITHUB_OUTPUT
          echo "curl -L -o ros-ocp-${{ steps.version.outputs.version }}.tgz https://github.com/insights-onprem/ros-helm-chart/releases/download/${{ steps.version.outputs.tag }}/ros-ocp-${{ steps.version.outputs.version }}.tgz" >> $GITHUB_OUTPUT
          echo "helm install ros-ocp ros-ocp-${{ steps.version.outputs.version }}.tgz --namespace ros-ocp --create-namespace" >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Latest Release (Always Current)" >> $GITHUB_OUTPUT
          echo "\`\`\`bash" >> $GITHUB_OUTPUT
          echo "# Always get the latest release" >> $GITHUB_OUTPUT
          echo "curl -L -o ros-ocp-latest.tgz https://github.com/insights-onprem/ros-helm-chart/releases/download/${{ steps.version.outputs.tag }}/ros-ocp-latest.tgz" >> $GITHUB_OUTPUT
          echo "helm install ros-ocp ros-ocp-latest.tgz --namespace ros-ocp --create-namespace" >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          files: |
            ros-ocp-${{ steps.version.outputs.version }}.tgz
            ros-ocp-latest.tgz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update latest release
        run: |
          echo "Release ${{ steps.version.outputs.tag }} created successfully!"
          echo "Versioned download: https://github.com/insights-onprem/ros-helm-chart/releases/download/${{ steps.version.outputs.tag }}/ros-ocp-${{ steps.version.outputs.version }}.tgz"
          echo "Latest download: https://github.com/insights-onprem/ros-helm-chart/releases/download/${{ steps.version.outputs.tag }}/ros-ocp-latest.tgz"
